// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PresentationCreatorWeb.Data;

namespace PresentationCreatorWeb.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190809135604_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "3.0.0-preview7.19362.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PresentationCreatorWeb.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Name");

                    b.Property<int>("ParentCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PresentationCreatorWeb.Data.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("PresentationCreatorWeb.Data.Models.Presentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("CategoryId");

                    b.Property<int>("CreatorUserId");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorUserId");

                    b.ToTable("Presentations");
                });

            modelBuilder.Entity("PresentationCreatorWeb.Data.Models.PresentationTag", b =>
                {
                    b.Property<int>("TagId");

                    b.Property<int>("PresentationId");

                    b.HasKey("TagId", "PresentationId");

                    b.HasIndex("PresentationId");

                    b.ToTable("PresentationTags");
                });

            modelBuilder.Entity("PresentationCreatorWeb.Data.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("PresentationCreatorWeb.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("Gender");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UserTypesStr");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PresentationCreatorWeb.Data.Models.UserFeature", b =>
                {
                    b.Property<int>("FeatureId");

                    b.Property<int>("UserId");

                    b.Property<double>("PrecentValue");

                    b.HasKey("FeatureId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFeatures");
                });

            modelBuilder.Entity("PresentationCreatorWeb.Data.Models.Category", b =>
                {
                    b.HasOne("PresentationCreatorWeb.Data.Models.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PresentationCreatorWeb.Data.Models.Presentation", b =>
                {
                    b.HasOne("PresentationCreatorWeb.Data.Models.Category", "Category")
                        .WithMany("Presentations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresentationCreatorWeb.Data.Models.User", "CreatorUser")
                        .WithMany("Presentations")
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PresentationCreatorWeb.Data.Models.PresentationTag", b =>
                {
                    b.HasOne("PresentationCreatorWeb.Data.Models.Presentation", "Presentation")
                        .WithMany("PresentationTags")
                        .HasForeignKey("PresentationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresentationCreatorWeb.Data.Models.Tag", "Tag")
                        .WithMany("PresentationTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PresentationCreatorWeb.Data.Models.UserFeature", b =>
                {
                    b.HasOne("PresentationCreatorWeb.Data.Models.Feature", "Feature")
                        .WithMany("UserFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresentationCreatorWeb.Data.Models.User", "User")
                        .WithMany("UserFeatures")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
